{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\OCRES\\\\Technologie du Web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\js\\\\Index.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Day from \"../composants/Day\";\nimport Index from \"../styles/Container.css\";\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast\";\nconst API_KEY = \"768a35a09a1701be84498950a95e7cf5\";\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callAPI = city => {\n      // Call API\n      axios.get(\"\".concat(API_URL, \"?q=\").concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\")).then(({\n        data\n      }) => {\n        console.log(data); // Recupere uniquement la propriété data\n\n        const list = data.list; // On prend les trois premières heures de chaque jour (donc de 0-3h))\n\n        const forecast = [list[0], list[9], list[17], list[25], list[33]];\n        this.setState({\n          forecast\n        });\n      }).catch(console.error);\n    };\n\n    this.state = {\n      forecast: null\n    };\n  }\n\n  // Lance un appel au lancement du component\n  componentDidMount() {\n    const city = this.props.city;\n    this.callAPI(city);\n  } // A chaque update relance une api\n\n\n  componentDidUpdate(nextProps) {\n    // Ici on verifie que la mise à jour concerne bien le champs city\n    if (nextProps.city !== this.props.city) {\n      this.callAPI(nextProps.city);\n    }\n  }\n\n  render() {\n    const forecast = this.state.forecast;\n    const city = this.props.city;\n    if (!forecast) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      className: \"titre2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, city), React.createElement(\"div\", {\n      className: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, forecast.map((forecastData, index) => {\n      return React.createElement(Day, {\n        key: index,\n        data: forecastData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/OCRES/Technologie du Web/PROJECT_WEB_OCRES/frontend/src/js/Index.js"],"names":["React","Component","axios","Day","Index","API_URL","API_KEY","Forecast","constructor","props","callAPI","city","get","then","data","console","log","list","forecast","setState","catch","error","state","componentDidMount","componentDidUpdate","nextProps","render","map","forecastData","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,OAAO,GAAG,iDAAhB;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,OAPmB,GAOTC,IAAI,IAAI;AAChB;AACAT,MAAAA,KAAK,CACFU,GADH,WACUP,OADV,gBACuBM,IADvB,oBACqCL,OADrC,oBAEGO,IAFH,CAEQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkB,CAElB;;AAFkB,cAGVG,IAHU,GAGDH,IAHC,CAGVG,IAHU,EAIlB;;AACA,cAAMC,QAAQ,GAAG,CAACD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,EAAD,CAAvB,EAA6BA,IAAI,CAAC,EAAD,CAAjC,EAAuCA,IAAI,CAAC,EAAD,CAA3C,CAAjB;AAEA,aAAKE,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AACD,OAVH,EAWGE,KAXH,CAWSL,OAAO,CAACM,KAXjB;AAYD,KArBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAkBD;AACAK,EAAAA,iBAAiB,GAAG;AAAA,UACVZ,IADU,GACD,KAAKF,KADJ,CACVE,IADU;AAElB,SAAKD,OAAL,CAAaC,IAAb;AACD,GA5B8B,CA8B/B;;;AACAa,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,QAAIA,SAAS,CAACd,IAAV,KAAmB,KAAKF,KAAL,CAAWE,IAAlC,EAAwC;AACtC,WAAKD,OAAL,CAAae,SAAS,CAACd,IAAvB;AACD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AAAA,UACCR,QADD,GACc,KAAKI,KADnB,CACCJ,QADD;AAAA,UAECP,IAFD,GAEU,KAAKF,KAFf,CAECE,IAFD;AAGP,QAAI,CAACO,QAAL,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACf,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAL,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGO,QAAQ,CAACS,GAAT,CAAa,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACrC,aAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,IAAI,EAAED,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CAFH,CAFF,CADF;AAgBD;;AA1D8B;;AA6DjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Day from \"../composants/Day\";\r\nimport Index from \"../styles/Container.css\";\r\n\r\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast\";\r\nconst API_KEY = \"768a35a09a1701be84498950a95e7cf5\";\r\n\r\nclass Forecast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      forecast: null\r\n    };\r\n  }\r\n\r\n  callAPI = city => {\r\n    // Call API\r\n    axios\r\n      .get(`${API_URL}?q=${city}&appid=${API_KEY}&units=metric`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        // Recupere uniquement la propriété data\r\n        const { list } = data;\r\n        // On prend les trois premières heures de chaque jour (donc de 0-3h))\r\n        const forecast = [list[0], list[9], list[17], list[25], list[33]];\r\n\r\n        this.setState({ forecast });\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  // Lance un appel au lancement du component\r\n  componentDidMount() {\r\n    const { city } = this.props;\r\n    this.callAPI(city);\r\n  }\r\n\r\n  // A chaque update relance une api\r\n  componentDidUpdate(nextProps) {\r\n    // Ici on verifie que la mise à jour concerne bien le champs city\r\n    if (nextProps.city !== this.props.city) {\r\n      this.callAPI(nextProps.city);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { forecast } = this.state;\r\n    const { city } = this.props;\r\n    if (!forecast) return <p>Loading...</p>;\r\n    return (\r\n      <div className=\"titre2\">\r\n        <h2>{city}</h2>\r\n        <div className=\"test\">\r\n          {/* render tout le tableau */}\r\n          {forecast.map((forecastData, index) => {\r\n            return <Day key={index} data={forecastData} />;\r\n          })}\r\n          {/* <Day data={forecast[0]}/>\r\n          <Day data={forecast[1]}/>\r\n          <Day data={forecast[2]}/>\r\n          <Day data={forecast[3]}/>\r\n          <Day data={forecast[4]}/> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forecast;\r\n"]},"metadata":{},"sourceType":"module"}