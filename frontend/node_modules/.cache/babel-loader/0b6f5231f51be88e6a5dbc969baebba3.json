{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\OCRES\\\\Technologie du Web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\composants\\\\Settings.js\";\nimport \"../styles/Settings.css\";\nimport React, { Component } from \"react\";\nconst API_URL = \"https://goweather.herokuapp.com/weather\";\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"Brest\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount(city) {\n    fetch(\"\".concat(API_URL, \"/&\").concat(city)).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result[\"temperature\"]\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const city = this.state.city;\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"bot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Entrez votre zone\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"Ville\",\n        value: city,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, items, \" \\xE0 \", city));\n    }\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/OCRES/Technologie du Web/PROJECT_WEB_OCRES/frontend/src/composants/Settings.js"],"names":["React","Component","API_URL","Settings","constructor","props","state","city","handleChange","event","setState","target","value","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","render","message"],"mappings":";AACA,OAAO,wBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,MAAMC,OAAO,GAAG,yCAAhB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAK/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAJnBC,KAImB,GAJX;AACNC,MAAAA,IAAI,EAAE;AADA,KAIW;;AAAA,SASnBC,YATmB,GASJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AAED,KAZkB;;AAEjB,SAAKN,KAAL,GAAa;AACXO,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAODC,EAAAA,iBAAiB,CAACT,IAAD,EAAO;AACtBU,IAAAA,KAAK,WAAIf,OAAJ,eAAgBK,IAAhB,EAAL,CAEGW,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFf,EAGGF,IAHH,CAIKG,MAAD,IAAY;AACV,WAAKX,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAAC,aAAD;AAFD,OAAd;AAID,KATL,EAUI;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKH,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAlBL;AAoBD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,UACCf,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAAA,wBAE4B,KAAKD,KAFjC;AAAA,UAECO,KAFD,eAECA,KAFD;AAAA,UAEQC,QAFR,eAEQA,QAFR;AAAA,UAEkBC,KAFlB,eAEkBA,KAFlB;;AAGP,QAAIF,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACU,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAGH;AACJ,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEP,IAHT;AAIE,QAAA,QAAQ,EAAE,KAAKC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIO,KADJ,YACcR,IADd,CATF,CADF;AAcG;AACJ;;AAlE8B;;AAqEjC,eAAeJ,QAAf","sourcesContent":["\r\nimport \"../styles/Settings.css\";\r\nimport React, { Component } from \"react\";\r\n\r\n\r\nconst API_URL = \"https://goweather.herokuapp.com/weather\"\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    city: \"Brest\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ city: event.target.value });\r\n    \r\n  };\r\n\r\n  componentDidMount(city) {\r\n    fetch(`${API_URL}/&${city}`)\r\n    \r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result[\"temperature\"]\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { city } = this.state;\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    else{\r\n    return (\r\n      <div className=\"bot\">\r\n        <h2> Entrez votre zone</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"Ville\"\r\n          value={city}\r\n          onChange={this.handleChange}\r\n        />\r\n        <ul>\r\n           {items} Ã  {city}\r\n          </ul>\r\n      </div>\r\n    );}\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}