{"ast":null,"code":"/*import React from 'react';\r\nimport {Settings, city} from '../composants/Settings';\r\n//on récupre dans settings le nom de la ville dans la donnée city\r\n//il faut maintenant pourvoir faire un fetch(\"https://goweather.herokuapp.com/weather/lenomdelaville\")\r\n//Bon courage\r\n\r\nconst API_URL = \"https://goweather.herokuapp.com/weather\"\r\n\r\n\r\nclass Apitest extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(`${API_URL}/&${city}`)\r\n      \r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result[\"temperature\"]\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n           {items} à {city}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  export default Apitest; */","map":{"version":3,"sources":["C:/Users/Admin/Desktop/OCRES/Technologie du Web/PROJECT_WEB_OCRES/frontend/src/js/Apitest.js"],"names":[],"mappings":"AAAA","sourcesContent":["/*import React from 'react';\r\nimport {Settings, city} from '../composants/Settings';\r\n//on récupre dans settings le nom de la ville dans la donnée city\r\n//il faut maintenant pourvoir faire un fetch(\"https://goweather.herokuapp.com/weather/lenomdelaville\")\r\n//Bon courage\r\n\r\nconst API_URL = \"https://goweather.herokuapp.com/weather\"\r\n\r\n\r\nclass Apitest extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(`${API_URL}/&${city}`)\r\n      \r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result[\"temperature\"]\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n           {items} à {city}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  export default Apitest; */"]},"metadata":{},"sourceType":"module"}